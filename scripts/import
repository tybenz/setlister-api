#!/usr/bin/env node

require( '../src/autoload.js' );
var passwordHash = require( 'password-hash' );
var Promise = require( 'bluebird' );
var inflect = require( 'i' )();
var songs = require( './data' );

var artists = {};

console.log(songs[0].title);

var seedArtists = function() {
  for ( var i = 0, len = songs.length; i < len; i++ ) {
    var song = songs[ i ];
    var artistName = song.artist;
    artists[ artistName ] = {
      name: artistName
    };
  }

  var artistPromises = [];

  for ( var i in artists ) {
    if ( artists.hasOwnProperty( i ) ) {
      var artistProps = artists[i];
      var artist = new Artist( artistProps )
      .save()
      .bind( { index: i } )
      .then( function( artist ) {
        artists[ this.index ].model = artist;

        return artist;
      });

      artistPromises.push( artist );
    }
  }

  return Promise.all( artistPromises );
}

var getLifePoint = function() {
  return new Group({ title: 'LifePoint' } ).fetch();
}

var seedSongs = function( group ) {
  var songPromises = [];

  for ( var i = 0, len = songs.length; i < len; i++ ) {
    var songProps = songs[ i ];
    var song = new Song({
      title: songProps.title,
      artist_id: artists[ songProps.artist ].model.id,
      group_id: group.id,
      license: songProps.license,
      year: songProps.year,
      key: songProps.data_key,
      text: songProps.text
    })
    .save();

    songPromises.push( song );
  }

  return Promise.all( songPromises );
}

seedArtists()
.then( getLifePoint )
.then( seedSongs )
.then( function() {
  console.log( 'Import finished' );
  process.exit();
});
